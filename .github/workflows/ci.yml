name: CI

on:
  push:
    branches: ["main"]
  pull_request:

env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "20"

jobs:
  tests:
    name: Run backend tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: Run pytest
        run: pytest

  frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install frontend dependencies
        working-directory: frontend
        run: pnpm install --no-frozen-lockfile

      - name: Build frontend
        working-directory: frontend
        run: pnpm build

  docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs:
      - tests
      - frontend
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare image metadata
        id: prep
        env:
          DCKR_PAT: ${{ secrets.DCKR_PAT }}
          DCKR_USERNAME: ${{ secrets.DCKR_USERNAME }}
          OWNER: ${{ github.repository_owner }}
        run: |
          set -euo pipefail
          echo "ghcr_image=ghcr.io/${{ github.repository }}" >>"$GITHUB_OUTPUT"
          if [ -n "${DCKR_PAT:-}" ]; then
            username="${DCKR_USERNAME:-$OWNER}"
            echo "dockerhub_username=$username" >>"$GITHUB_OUTPUT"
            echo "dockerhub_image=docker.io/$username/scrobbler" >>"$GITHUB_OUTPUT"
            echo "push_dockerhub=true" >>"$GITHUB_OUTPUT"
          else
            echo "push_dockerhub=false" >>"$GITHUB_OUTPUT"
          fi

      - name: Log in to GitHub Container Registry (push)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GitHub Container Registry (pull_request)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: steps.prep.outputs.push_dockerhub == 'true'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ steps.prep.outputs.dockerhub_username }}
          password: ${{ secrets.DCKR_PAT }}

      - name: Build (and push) Docker image
        env:
          GHCR_IMAGE: ${{ steps.prep.outputs.ghcr_image }}
          DOCKERHUB_IMAGE: ${{ steps.prep.outputs.dockerhub_image }}
          PUSH_DOCKERHUB: ${{ steps.prep.outputs.push_dockerhub }}
        run: |
          set -euo pipefail

          declare -a TAG_ARGS
          TAG_ARGS+=("--tag" "${GHCR_IMAGE}:${{ github.sha }}")

          if [ "${PUSH_DOCKERHUB}" = "true" ]; then
            TAG_ARGS+=("--tag" "${DOCKERHUB_IMAGE}:${{ github.sha }}")
          fi

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            if [ "${{ github.event.pull_request.head.repo.fork }}" = "true" ]; then
              docker buildx build \
                --file docker/Dockerfile \
                --platform linux/amd64 \
                "${TAG_ARGS[@]}" \
                --load \
                .
            else
              TAG_ARGS+=("--tag" "${GHCR_IMAGE}:pr-${{ github.event.number }}")
              if [ "${PUSH_DOCKERHUB}" = "true" ]; then
                TAG_ARGS+=("--tag" "${DOCKERHUB_IMAGE}:pr-${{ github.event.number }}")
              fi

              docker buildx build \
                --file docker/Dockerfile \
                --platform linux/amd64 \
                "${TAG_ARGS[@]}" \
                --push \
                .
            fi
          else
            TAG_ARGS+=("--tag" "${GHCR_IMAGE}:latest")
            if [ "${PUSH_DOCKERHUB}" = "true" ]; then
              TAG_ARGS+=("--tag" "${DOCKERHUB_IMAGE}:latest")
            fi

            docker buildx build \
              --file docker/Dockerfile \
              --platform linux/amd64 \
              "${TAG_ARGS[@]}" \
              --push \
              .
          fi
